esphome:
  name: ring
  platform: ESP8266
  board: esp01_1m
  esp8266_restore_from_flash: true
  platformio_options:
    platform: "espressif8266@2.5.3"

wifi:
  ssid: !secret ap_name
  password: !secret ap_password
  fast_connect: true

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Ring Hotspot"
    password: !secret hotspot_password

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret ota_password
  
globals:
  - id: ring_relay_bind
    type: bool
    restore_value: yes
    initial_value: 'false'

sensor:
  - platform: uptime
    name: ring_uptime

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: ring_btn0
    on_click:
      - min_length: 50ms
        then:
          - switch.toggle: ring_relay
  - platform: gpio
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: True
    name: ring_btn14
    on_press:
      then:
        if:
          condition:
            - switch.is_on: ring_enabled
          then:
            - switch.turn_on: ring_relay
    on_release:
      then:
        - switch.turn_off: ring_relay
    filters:
      - delayed_on_off: 50ms
  - platform: status
    name: ring_status

status_led:
  pin:
    number: GPIO13
    inverted: True
    
switch:
  - platform: gpio
    id: ring_relay
    name: "ring_relay"
    pin: GPIO12
    restore_mode: ALWAYS_OFF
  - platform: template
    name: "ring_enabled"
    id: ring_enabled
    restore_state: yes
    lambda: |-
      return id(ring_relay_bind);
    turn_on_action:
      - globals.set:
          id: ring_relay_bind
          value: 'true'
    turn_off_action:
      - globals.set:
          id: ring_relay_bind
          value: 'false'
      - switch.turn_off: ring_relay
